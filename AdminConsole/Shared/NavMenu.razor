@using Microsoft.AspNetCore.Components.Authorization
@using AdminConsole.Data.Authentication

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">AdminConsole</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="settings">
                <span class="oi oi-cog" aria-hidden="true"></span> Settings
            </NavLink>
        </div>
        <div class="nav-item px-3 mt-auto">
            <button class="nav-link btn btn-link" @onclick="HandleLogout">
                <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
            </button>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    [Inject]
    private AuthenticationStateProvider AuthStateProvider { get; set; } = default!;

    [Inject]
    private NavigationManager NavigationManager { get; set; } = default!;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task HandleLogout()
    {
        if (AuthStateProvider is MockAuthenticationStateProvider mockAuth)
        {
            await mockAuth.MarkUserAsLoggedOut();
            NavigationManager.NavigateTo("/login");
        }
    }
}
