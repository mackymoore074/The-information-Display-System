@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">DsplayScreen</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <button class="nav-link btn btn-link" @onclick="LogoutAsync">
                <span class="oi oi-account-logout" aria-hidden="true"></span> Logout
            </button>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task LogoutAsync()
    {
        try
        {
            await LocalStorage.RemoveItemAsync("authToken");
            NavigationManager.NavigateTo("/login", true); // Force reload the page
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during logout: {ex.Message}");
        }
    }
}

<style>
    .btn-link {
        color: #d7d7d7;
        text-align: left;
        padding: 0.75rem 1rem;
        width: 100%;
    }

    .btn-link:hover {
        color: white;
        background-color: rgba(255,255,255,0.1);
    }
</style>
